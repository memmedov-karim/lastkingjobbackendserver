const mongoose = require("mongoose");
const Schema = mongoose.Schema;
const user = new Schema({
    user:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'Users'
    }
})
const job = new Schema({
    company:{
        type:Schema.Types.ObjectId,
        required:true,
        ref:"company"
    },
    category:{
        type:Schema.Types.ObjectId,
        required:true,
        ref:'categories'
    },
    name:{
        type:String,
        required:true
    },
    city:{
        type:String,
        enum:[
            'Baki','Abşeron','Ağcabədi','Ağdam','Ağdaş','Ağstafa','Ağsu','Astara','Balakən','Bərdə','Beyləqan','Biləsuvar','Cəbrayıl','Cəlilabad','Daşkəsən','Füzuli','Gədəbəy','Goranboy','Göyçay','Göygöl','Göytəpə','Hacıqabul','İmişli','İsmayıllı','Kəlbəcər','Kürdəmir','Laçın','Lənkəran','Lerik','Masallı','Neftçala','Oğuz','Ordubad','Qəbələ','Qax','Qazax','Qobustan',
            'Quba','Qubadlı','Qusar','Saatlı','Sabirabad','Şabran','Şəki','Şəmkir','Samux','Şamaxı','Şirvan','Siyəzən','Sumqayıt','Şuşa','Tərtər','Tovuz','Ucar','Xaçmaz','Yardımlı','Yevlax',
            'Zaqatala','Zəngilan','Zərdab'
          ]
    },
    type:{
        type:Schema.Types.ObjectId,
        required:true,
        ref:'jobtypes'
    },
    experience:{
        type:String,
        enum:['Təcrübəsiz','Minimum 1 il','Minimum 2 il','Minimum 3 il','Minimum 4 il','Minimum 5 il','Minimum 6 il','Minimum 7 il','7 il +']
    },
    education:{
        type:String,
        enum:['Təhsilsiz','Orta','Ali']
    },
    descriptionOfVacancy:{
        type:String,
        required:true
    },
    skills:{
        type:Array,
        default:[]
    },
    salary:{
        type:Number,
        default:null
    },
    numberOfViews:{
        type:Number,
        default:0
    },
    numberOfApplys:{
        type:Number,
        default:0
    },
    premium:{
        type:Boolean,
        default:false
    },
    endTime:{
        type:Date,
        require:true
    },
    active:{
        type:Boolean,
        required:true,
        default:true
    },
    salaryType:{
        type:String,
        default:'Aylıq'
    },
    agreedSalary:{
        type:Boolean,
        default:false
    },
    age:{
        type:String,
        default:"18-25"
    },
    taskInfo:{
        folder:{
            type:mongoose.Schema.Types.ObjectId,
            ref:'Folders',
            default:null
        },
        minPoint:{
            type:Number,
            default:0
        },
        participants:[user]
    }

},{timestamps:true})

const Jobs = mongoose.model("job",job);
module.exports = {Jobs}